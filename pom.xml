<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.pancake</groupId>
	<artifactId>pancake</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Pancake App</name>
	<description>
		Application for the ramp-up project of the newcomers.
	</description>

	<modules>
		<module>pancake-webapp</module>
		<module>pancake-service</module>
	</modules>

	<properties>
		<!-- General settings -->
		<path>${project.basedir}</path>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Build -->
		<!-- JDK and compiler versions -->
		<java.version>1.8</java.version>
		<maven.compiler.version>3.5.1</maven.compiler.version>
		<!-- Unit tests -->
		<plugin.maven.surefire.version>2.19.1</plugin.maven.surefire.version>
		<!-- Embedded Tomcat -->
		<tomcat.version>2.2</tomcat.version>
		<!-- Jacoco code coverage -->
		<jacoco.version>0.7.6.201602180812</jacoco.version>
		<jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>

		<!-- Reports -->
		<!-- Checkstyle -->
		<maven.checkstyle.version>2.17</maven.checkstyle.version>
		<checkstyle.basedir>${path}/build/rules</checkstyle.basedir>
		<checkstyle.config.location>${checkstyle.basedir}/checkstyle_rules.xml</checkstyle.config.location>
		<checkstyle.suppressions.location>${checkstyle.basedir}/checkstyle_suppressions.xml</checkstyle.suppressions.location>
		<checkstyle.propertyExpansion>samedir=${checkstyle.basedir}</checkstyle.propertyExpansion>
		<checkstyle.consoleOutput>true</checkstyle.consoleOutput>
		<checkstyle.failOnViolation>false</checkstyle.failOnViolation>
		<checkstyle.failsOnError>true</checkstyle.failsOnError>
		<!-- Cross reference -->
		<maven.jxr.version>2.5</maven.jxr.version>

		<!-- Dependencies -->
		<!-- Servlet API -->
		<servlet.version>3.1.0</servlet.version>
		<jstl.version>1.2</jstl.version>
		<!-- Spring -->
		<spring.version>4.2.5.RELEASE</spring.version>
		<!-- Hibernate -->
		<hibernate.version>5.2.4.Final</hibernate.version>
		<!-- Guava -->
		<guava.version>19.0</guava.version>
		<!-- Parameter values -->
		<skip.unit.tests>false</skip.unit.tests>
		<!-- Modules -->
		<pancake.persistence.version>1.0</pancake.persistence.version>
		<pancakeapp.version>1.0-SNAPSHOT</pancakeapp.version>
		<!-- Logging -->
		<jcl.slf4j.version>1.7.19</jcl.slf4j.version>
		<logback.version>1.1.6</logback.version>
		<!-- Testing -->
		<mockito.version>1.10.19</mockito.version>
		<testng.version>6.9.10</testng.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Servlet API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<!-- Guava -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<!-- Modules -->
			<dependency>
				<groupId>com.github.gergelyrozsonits.iogithubpancakepersistence</groupId>
				<artifactId>io-github-pancake-persistence-api</artifactId>
				<version>${pancake.persistence.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.gergelyrozsonits.iogithubpancakepersistence</groupId>
				<artifactId>io-github-pancake-persistence-impl</artifactId>
				<version>${pancake.persistence.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.pancake</groupId>
				<artifactId>pancake-service</artifactId>
				<version>${pancakeapp.version}</version>
			</dependency>
			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${jcl.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<!-- Testing -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Maven compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- Maven Surefire plugin to run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${plugin.maven.surefire.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skip>${skip.unit.tests}</skip>
				</configuration>
			</plugin>
			<!-- Embedded Tomcat -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat.version}</version>
				<configuration>
					<port>9090</port>
					<path>/pancake-webapp</path>
				</configuration>
			</plugin>
			<!-- Jacoco code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent -->
							<propertyName>${surefireArgLine}</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data -->
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.version}</version>
				<inherited>true</inherited>
				<configuration>
					<configLocation>${checkstyle.config.location}</configLocation>
					<propertyExpansion>${checkstyle.propertyExpansion}</propertyExpansion>
					<suppressionsLocation>${checkstyle.suppressions.location}</suppressionsLocation>
					<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
					<excludes>config/sun_checks.xml</excludes>
					<consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
					<failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.version}</version>
				<inherited>true</inherited>
				<configuration>
					<configLocation>${checkstyle.config.location}</configLocation>
					<propertyExpansion>${checkstyle.propertyExpansion}</propertyExpansion>
					<suppressionsLocation>${checkstyle.suppressions.location}</suppressionsLocation>
					<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
					<excludes>config/sun_checks.xml</excludes>
					<consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
					<failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
				</configuration>
			</plugin>
			<!-- Cross references -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>
</project>
